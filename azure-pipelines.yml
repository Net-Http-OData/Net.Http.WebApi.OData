trigger:
  branches:
    include:
      - master
      - develop
      - hotfix*
      - feature*
  paths:
    exclude:
      - .editorconfig
      - README.md
      - stylecop.json

pool:
  vmImage: 'windows-latest'

variables:
  buildConfiguration: 'Release'
  buildPlatform: 'Any CPU'
  buildVersion: '0.0.0'
  projectPath: '.\Net.Http.WebApi.OData\Net.Http.WebApi.OData.csproj'
  solution: '**/*.sln'

steps:
- task: NuGetToolInstaller@1

- task: NuGetCommand@2
  inputs:
    restoreSolution: '$(solution)'

- task: VSBuild@1
  inputs:
    solution: '$(solution)'
    platform: '$(buildPlatform)'
    configuration: '$(buildConfiguration)'

- task: VSTest@2
  inputs:
    platform: '$(buildPlatform)'
    configuration: '$(buildConfiguration)'
    codeCoverageEnabled: true

- task: PowerShell@2
  inputs:
    targetType: 'inline'
    script: |
      $projVersion = ([xml](Get-Content "$(projectPath)")) | Select-Xml -XPath "//Project/PropertyGroup[1]/Version"

      Write-Host "##vso[task.setvariable variable=buildVersion]$projVersion"
  condition: and(succeeded(), in(variables['Build.SourceBranch'], 'refs/heads/develop', 'refs/heads/master'))

- script: dotnet pack "$(projectPath)" -o:$(Build.ArtifactStagingDirectory) -p:PackageVersion="$(buildVersion)-preview$(Build.BuildNumber)"
  displayName: 'dotnet pack (pre)'
  condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/develop'))

- script: dotnet pack "$(projectPath)" -o:$(Build.ArtifactStagingDirectory) -p:PackageVersion=$(buildVersion)
  displayName: 'dotnet pack'
  condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/master'))

- task: NuGetCommand@2
  inputs:
    command: 'push'
    packagesToPush: '$(Build.ArtifactStagingDirectory)/**/*.nupkg;!$(Build.ArtifactStagingDirectory)/**/*.symbols.nupkg'
    nuGetFeedType: 'external'
    publishFeedCredentials: 'NuGet.org (Net.Http.OData)'
  condition: and(and(succeeded(), in(variables['Build.Reason'], 'IndividualCI', 'BatchedCI', 'Manual')), in(variables['Build.SourceBranch'], 'refs/heads/develop', 'refs/heads/master'))
