name: CI
on:
  push:
  pull_request:

env:
  SOLUTION_NAME: Net.Http.WebApi.OData.sln

jobs:
  build:
    name: Build
    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v2

    - name: Setup MSBuild
      uses: microsoft/setup-msbuild@v1.0.2

    - name: Setup VSTest Path
      uses: darenm/Setup-VSTest@v1

    - name: Setup NuGet
      uses: nuget/setup-nuget@v1

    - name: Restore NuGet Packages
      run: nuget restore ${{ env.SOLUTION_NAME }}

    - name: MSBuild
      run: msbuild ${{ env.SOLUTION_NAME }} /p:Configuration=Release

    - name: VSTest
      run: vstest.console.exe /Platform:x64 '.\Net.Http.WebApi.OData.Tests\bin\Release\Net.Http.WebApi.OData.Tests.dll'

#    - name: dotnet pack (pre-release)
#      if: github.event_name == 'push' && github.ref == 'refs/heads/develop'
#      run: |
#        $date = Get-Date -Format "yyyyMMdd"
#        $projVersion = ([xml](Get-Content ${{ env.PROJECT_PATH }})) | Select-Xml -XPath "//Project/PropertyGroup[1]/Version"
#        dotnet pack --no-build -p:PackageVersion="$projVersion-preview$date.${{ github.run_id }}"
#      shell: pwsh

#    - name: dotnet pack
#      if: github.event_name == 'push' && github.ref == 'refs/heads/master'
#      run: |
#        $projVersion = ([xml](Get-Content ${{ env.PROJECT_PATH }})) | Select-Xml -XPath "//Project/PropertyGroup[1]/Version"
#        dotnet pack --no-build -p:PackageVersion="$projVersion"
#      shell: pwsh

#    - name: dotnet nuget push
#      if: github.event_name == 'push' && (github.ref == 'refs/heads/develop' || github.ref == 'refs/heads/master')
#      run: dotnet nuget push '/home/runner/work/**/*.nupkg' --api-key ${{ secrets.NUGET_API_KEY }} --source ${{ env.NUGET_SOURCE }}
